<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>计算机科学 on Tangwz - 我想要说的，前人们都说过了</title>
    <link>https://tangwz.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/</link>
    <description>Recent content in 计算机科学 on Tangwz - 我想要说的，前人们都说过了</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Tangwz</copyright>
    <lastBuildDate>Thu, 26 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tangwz.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>系统设计那些事儿：硬盘 I/O</title>
      <link>https://tangwz.com/post/disk/</link>
      <pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/disk/</guid>
      <description>数据库系统总会涉及非易失性存储，我们需要知道一个典型的计算机系统是如何进行存储管理的。时至今日，虽然 SSD 已经成为很多数据库管理员的选择，但传统</description>
    </item>
    
    <item>
      <title>用 Raft 的方式理解 Multi-Paxos</title>
      <link>https://tangwz.com/post/understanding-multi-paxos/</link>
      <pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/understanding-multi-paxos/</guid>
      <description>Multi-Paxos 在文献中并没有准确的实现细节，这里提供一个相对完整的规范，保持接近 Leslie Lamport 在 “The Part-Time Parliament.” 中给出的算法。 这里描述的 Multi-Paxos 尚未经</description>
    </item>
    
    <item>
      <title>Raft 作者亲自出的 Raft 试题，你能做对几道？</title>
      <link>https://tangwz.com/post/raft-exam/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/raft-exam/</guid>
      <description>试题 1. （4 分）下面的每张图都显示了一台 Raft 服务器上可能存储的日志（日志内容未显示，只显示日志的 index 和任期号）。考虑每份日志都是独立的，下面的日志</description>
    </item>
    
    <item>
      <title>Raft 作者出的 Paxos 的试题</title>
      <link>https://tangwz.com/post/paxos-exam/</link>
      <pubDate>Mon, 26 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/paxos-exam/</guid>
      <description>试题 1. (4 分）下面的每张图都显示了一种 Multi-Paxos 服务器上可能的日志（每个条目中的数字代表 acceptedProposal 值）。考虑每份日志都是独立的，下列日志是否可能发生在正确实现</description>
    </item>
    
    <item>
      <title>Paxos 的变种（一）：Multi-Paxos</title>
      <link>https://tangwz.com/post/multi-paxos/</link>
      <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/multi-paxos/</guid>
      <description>分布式系统为了实现多副本状态机（Replicated state machine），常常需要一个多副本日志（Replicated log）系统，这个原理受</description>
    </item>
    
    <item>
      <title>理解 Paxos（含伪代码）</title>
      <link>https://tangwz.com/post/basic-paxos/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/basic-paxos/</guid>
      <description>Google Chubby 的作者 Mike Burrows 说过：There is only one consensus protocol, and that&amp;rsquo;s Paxos. 引言 上文我们已经详细的阐述了共识问题并介绍了一些共识算法，其中 Paxos 算法是 Leslie Lamport 于 1990 年提出的共识算法</description>
    </item>
    
    <item>
      <title>同样更新分支，git merge 和 rebase 有什么区别？</title>
      <link>https://tangwz.com/post/git-merge-vs-rebase/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/git-merge-vs-rebase/</guid>
      <description>最近在给 kubernetes 提交代码，k8s 社区要求非常严格，既要分支保持与主干的代码同步，还要一次只能有一条 commit。过程中我错误地使用了一把 git merge 和 git r</description>
    </item>
    
    <item>
      <title>分布式系统的核心：共识问题</title>
      <link>https://tangwz.com/post/consensus/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/consensus/</guid>
      <description>混乱的“一致性”问题 Consensus != Consistency 受翻译影响，网上很多讨论 paxos 或 raft 的博客使用“分布式一致性协议”或者“分布式一致性算法”这样的字眼，虽然在汉语中“达成</description>
    </item>
    
    <item>
      <title>认识分布式系统</title>
      <link>https://tangwz.com/post/intro-distributed-system/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tangwz.com/post/intro-distributed-system/</guid>
      <description>Google “三驾马车”论文发布以后，“大数据”和“分布式”就成了各种科技新闻媒体的“宠儿”，虽然如今头版已被“人工智能”、“机器学习”占据，围绕着解</description>
    </item>
    
  </channel>
</rss>
